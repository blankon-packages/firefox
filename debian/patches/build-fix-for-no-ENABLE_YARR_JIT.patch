# HG changeset patch
# User Andrew Paprocki <andrew@ishiboo.com>
# Date 1310430767 25200
# Node ID 691294843828d5b4108559b27bfe342ce3b146ef
# Parent  9b2e6ea86756ae95f7f5b03799663e810877ecfc
Bug 665819: build fix for ENABLE_YARR_JIT=0, r=dmandelin

diff --git a/js/src/jsregexpinlines.h b/js/src/jsregexpinlines.h
--- a/js/src/jsregexpinlines.h
+++ b/js/src/jsregexpinlines.h
@@ -486,17 +486,19 @@ RegExp::compileHelper(JSContext *cx, JSL
             return false;
         JSC::Yarr::JSGlobalData globalData(cx->compartment->jaegerCompartment()->execAlloc());
         JSC::Yarr::jitCompile(yarrPattern, &globalData, codeBlock);
         if (!codeBlock.isFallBack())
             return true;
     }
 #endif
 
+#if ENABLE_YARR_JIT
     codeBlock.setFallBack(true);
+#endif
     byteCode = JSC::Yarr::byteCompile(yarrPattern, cx->compartment->regExpAllocator).get();
 
     return true;
 }
 
 inline bool
 RegExp::compile(JSContext *cx, TokenStream *ts)
 {
diff --git a/js/src/yarr/OSAllocatorPosix.cpp b/js/src/yarr/OSAllocatorPosix.cpp
--- a/js/src/yarr/OSAllocatorPosix.cpp
+++ b/js/src/yarr/OSAllocatorPosix.cpp
@@ -24,17 +24,17 @@
  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  * THE POSSIBILITY OF SUCH DAMAGE.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "assembler/wtf/Platform.h"
 
-#if ENABLE_ASSEMBLER && WTF_OS_UNIX && !WTF_OS_SYMBIAN
+#if WTF_OS_UNIX && !WTF_OS_SYMBIAN
 
 #include "OSAllocator.h"
 
 #include <errno.h>
 #include <sys/mman.h>
 #include "wtf/Assertions.h"
 
 namespace WTF {
diff --git a/js/src/yarr/wtfbridge.h b/js/src/yarr/wtfbridge.h
--- a/js/src/yarr/wtfbridge.h
+++ b/js/src/yarr/wtfbridge.h
@@ -45,17 +45,19 @@
  * definitions for use by Yarr.
  */
 
 #include "jsstr.h"
 #include "jsprvtd.h"
 #include "jstl.h"
 #include "vm/String.h"
 #include "assembler/wtf/Platform.h"
+#if ENABLE_YARR_JIT
 #include "assembler/jit/ExecutableAllocator.h"
+#endif
 
 namespace JSC { namespace Yarr {
 
 /*
  * Basic type definitions.
  */
 
 typedef jschar UChar;
@@ -256,27 +258,31 @@ class Vector<OwnPtr<T> > {
 };
 
 template <typename T, size_t N>
 inline void
 deleteAllValues(Vector<T, N> &v) {
     v.deleteAllValues();
 }
 
+#if ENABLE_YARR_JIT
+
 /*
  * Minimal JSGlobalData. This used by Yarr to get the allocator.
  */
 class JSGlobalData {
   public:
     ExecutableAllocator *regexAllocator;
 
     JSGlobalData(ExecutableAllocator *regexAllocator)
      : regexAllocator(regexAllocator) { }
 };
 
+#endif
+
 /*
  * Sentinel value used in Yarr.
  */
 const size_t notFound = size_t(-1);
 
  /*
   * Do-nothing version of a macro used by WTF to avoid unused
   * parameter warnings.


